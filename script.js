document.addEventListener("DOMContentLoaded", function () {
  const menuLinks = document.querySelectorAll("aside ul li a");
  const content = document.querySelector(".content");

  const pages = {
    "Trang ch·ªß": `
      <h2>Trang ch·ªß</h2>
      <div class="card">
        <p><strong>CHATL</strong> l√† h·ªá th·ªëng qu·∫£n l√Ω v√† gi√°m s√°t h·∫° t·∫ßng m·∫°ng hi·ªán ƒë·∫°i ƒë∆∞·ª£c ph√°t tri·ªÉn cho c√°c t√≤a nh√† cao t·∫ßng. H·ªá th·ªëng gi√∫p k·ªπ thu·∫≠t vi√™n theo d√µi tr·∫°ng th√°i thi·∫øt b·ªã m·∫°ng, ph√¢n t√≠ch hi·ªáu su·∫•t v√† x·ª≠ l√Ω s·ª± c·ªë nhanh ch√≥ng, ch√≠nh x√°c.</p>
        <p>V·ªõi giao di·ªán tr·ª±c quan, bi·ªÉu ƒë·ªì ph√¢n t√≠ch v√† b√°o c√°o chi ti·∫øt theo t·ª´ng t·∫ßng, CHATL l√† gi·∫£i ph√°p l√Ω t∆∞·ªüng cho trung t√¢m d·ªØ li·ªáu, vƒÉn ph√≤ng v√† h·ªá th·ªëng m·∫°ng ph·ª©c t·∫°p.</p>
      </div>
    `,
    "Gi·ªõi thi·ªáu": `
      <h2>Gi·ªõi thi·ªáu h·ªá th·ªëng CHATL</h2>
      <div class="card">
        <p>CHATL ƒë∆∞·ª£c x√¢y d·ª±ng nh·∫±m t·ªëi ∆∞u h√≥a quy tr√¨nh v·∫≠n h√†nh m·∫°ng trong c√°c t√≤a nh√† cao t·∫ßng. H·ªá th·ªëng h·ªó tr·ª£ c√°c t√≠nh nƒÉng n·ªïi b·∫≠t:</p>
        <ul>
          <li>‚úÖ Gi√°m s√°t hi·ªáu su·∫•t thi·∫øt b·ªã theo th·ªùi gian th·ª±c</li>
          <li>‚úÖ C·∫£nh b√°o l·ªói v√† b·∫•t th∆∞·ªùng</li>
          <li>‚úÖ Qu·∫£n l√Ω thi·∫øt b·ªã m·∫°ng theo t·ª´ng t·∫ßng</li>
          <li>‚úÖ B√°o c√°o chi ti·∫øt cho ƒë·ªôi ng≈© k·ªπ thu·∫≠t</li>
        </ul>
        <p>H·ªá th·ªëng k·∫øt h·ª£p gi·ªØa thu th·∫≠p d·ªØ li·ªáu SNMP, x·ª≠ l√Ω backend m·∫°nh m·∫Ω v√† giao di·ªán web tr·ª±c quan gi√∫p v·∫≠n h√†nh m∆∞·ª£t m√† v√† hi·ªáu qu·∫£.</p>
      </div>
    `,
    "Qu·∫£n l√Ω m·∫°ng": `
      <h2>Qu·∫£n l√Ω t√≤a nh√† 30 t·∫ßng</h2>
      <div class="card">
        <p>Ch·ªçn t·∫ßng ƒë·ªÉ xem th√¥ng tin thi·∫øt b·ªã m·∫°ng, hi·ªáu su·∫•t v√† l·ªói:</p>
        <div class="floor-list">
          ${[...Array(30).keys()].map(i => {
            const floor = 30 - i;
            return `<button class="floor-btn" onclick="loadFloorData(${floor})">T·∫ßng ${floor}</button>`;
          }).join("")}
        </div>
      </div>
    `,
    "Gi√°m s√°t hi·ªáu su·∫•t": `
      <h2>Gi√°m s√°t hi·ªáu su·∫•t h·ªá th·ªëng</h2>
      <div class="card">
        <h3>Th√¥ng tin gi√°m s√°t to√†n h·ªá th·ªëng</h3>
        <ul>
          <li>BƒÉng th√¥ng s·ª≠ d·ª•ng: 75%</li>
          <li>Th·ªùi gian ho·∫°t ƒë·ªông: 99.8%</li>
          <li>C·∫£nh b√°o: 2</li>
          <li>S·ª± c·ªë ƒëang x·ª≠ l√Ω: 1</li>
        </ul>
      </div>
      <div class="card">
        <h3>Bi·ªÉu ƒë·ªì hi·ªáu su·∫•t</h3>
        <canvas id="performanceChart" width="600" height="300"></canvas>
      </div>
      <div class="card">
        <h3>Th·ªëng k√™ theo t·∫ßng</h3>
        <table class="performance-table">
          <thead>
            <tr>
              <th>T·∫ßng</th>
              <th>CPU trung b√¨nh</th>
              <th>RAM s·ª≠ d·ª•ng</th>
              <th>BƒÉng th√¥ng</th>
              <th>Tr·∫°ng th√°i</th>
            </tr>
          </thead>
          <tbody>
            ${[...Array(30).keys()].map(i => {
              const floor = 30 - i;
              return `
                <tr>
                  <td>T·∫ßng ${floor}</td>
                  <td>${(Math.random() * 30 + 20).toFixed(1)}%</td>
                  <td>${(Math.random() * 30 + 50).toFixed(1)}%</td>
                  <td>${(Math.random() * 40 + 30).toFixed(1)}%</td>
                  <td>${Math.random() > 0.2 ? '‚úÖ ·ªîn ƒë·ªãnh' : '‚ö† C·∫£nh b√°o'}</td>
                </tr>
              `;
            }).join("")}
          </tbody>
        </table>
      </div>
    `,
    "Thi·∫øt b·ªã m·∫°ng": `
      <h2>Qu·∫£n l√Ω thi·∫øt b·ªã m·∫°ng</h2>
      <div class="card">
        <h3>Danh s√°ch thi·∫øt b·ªã to√†n h·ªá th·ªëng</h3>
        <table class="devices-table">
          <thead>
            <tr>
              <th>T√™n thi·∫øt b·ªã</th>
              <th>ƒê·ªãa ch·ªâ IP</th>
              <th>V·ªã tr√≠</th>
              <th>Tr·∫°ng th√°i</th>
              <th>Th·ªùi gian ho·∫°t ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Router ch√≠nh</td>
              <td>192.168.1.1</td>
              <td>Ph√≤ng server</td>
              <td>Online</td>
              <td>15 ng√†y</td>
            </tr>
            <tr>
              <td>Switch t·∫ßng 1</td>
              <td>192.168.1.2</td>
              <td>T·∫ßng 1</td>
              <td>Online</td>
              <td>12 ng√†y</td>
            </tr>
            <tr>
              <td>Access Point t·∫ßng 1</td>
              <td>192.168.1.3</td>
              <td>T·∫ßng 1</td>
              <td>Offline</td>
              <td>0 gi·ªù</td>
            </tr>
            ${[...Array(27).keys()].map(i => {
              const floor = i + 2;
              return `
                <tr>
                  <td>Switch t·∫ßng ${floor}</td>
                  <td>192.168.${floor}.1</td>
                  <td>T·∫ßng ${floor}</td>
                  <td>Online</td>
                  <td>${Math.floor(Math.random() * 10) + 1} ng√†y</td>
                </tr>
                <tr>
                  <td>Access Point t·∫ßng ${floor}</td>
                  <td>192.168.${floor}.2</td>
                  <td>T·∫ßng ${floor}</td>
                  <td>Online</td>
                  <td>${Math.floor(Math.random() * 10) + 1} ng√†y</td>
                </tr>
              `;
            }).join("")}
          </tbody>
        </table>
      </div>
    `,
    "B√°o c√°o l·ªói": `
      <h2>Qu·∫£n l√Ω s·ª± c·ªë h·ªá th·ªëng</h2>
      <div class="card">
        <h3>Danh s√°ch s·ª± c·ªë g·∫ßn ƒë√¢y</h3>
        <div class="report-item">
          <h4>M·∫•t k·∫øt n·ªëi Internet</h4>
          <p><strong>Th·ªùi gian:</strong> 10/4/2023 14:30</p>
          <p><strong>Tr·∫°ng th√°i:</strong> ƒêang x·ª≠ l√Ω</p>
          <p><strong>M√¥ t·∫£:</strong> M·∫•t k·∫øt n·ªëi to√†n b·ªô h·ªá th·ªëng trong 15 ph√∫t</p>
          <p><strong>Nh√¢n vi√™n ph·ª• tr√°ch:</strong> Nguy·ªÖn VƒÉn A</p>
        </div>
        <div class="report-item">
          <h4>Ch·∫≠m m·∫°ng</h4>
          <p><strong>Th·ªùi gian:</strong> 8/4/2023 09:15</p>
          <p><strong>Tr·∫°ng th√°i:</strong> ƒê√£ gi·∫£i quy·∫øt</p>
          <p><strong>M√¥ t·∫£:</strong> T·ªëc ƒë·ªô m·∫°ng ch·∫≠m b·∫•t th∆∞·ªùng</p>
          <p><strong>Gi·∫£i ph√°p:</strong> Thay th·∫ø c√°p quang t·∫ßng 5</p>
        </div>
        <div class="report-item">
          <h4>Qu√° t·∫£i server</h4>
          <p><strong>Th·ªùi gian:</strong> 5/4/2023 11:45</p>
          <p><strong>Tr·∫°ng th√°i:</strong> ƒê√£ gi·∫£i quy·∫øt</p>
          <p><strong>M√¥ t·∫£:</strong> CPU server ƒë·∫°t 100% trong 30 ph√∫t</p>
          <p><strong>Gi·∫£i ph√°p:</strong> Th√™m RAM v√† t·ªëi ∆∞u d·ªãch v·ª•</p>
        </div>
        <button class="btn-report">B√°o c√°o s·ª± c·ªë m·ªõi</button>
      </div>
    `,
    "Li√™n h·ªá": `
      <h2>Th√¥ng tin li√™n h·ªá</h2>
      <div class="card">
        <p>üìû S·ªë ƒëi·ªán tho·∫°i: <strong>0961 186 421</strong></p>
        <p>üìß Email: <strong>ttoan2286@gmail.com</strong></p>
        <p>üìç ƒê·ªãa ch·ªâ: 96A ƒê. Tr·∫ßn Ph√∫, P. M·ªô Lao, H√† ƒê√¥ng, H√† N·ªôi</p>
      </div>
      <div class="card">
        <h3>G·ª≠i y√™u c·∫ßu h·ªó tr·ª£</h3>
        <form class="contact-form">
          <div class="form-group">
            <label for="name">H·ªç v√† t√™n:</label>
            <input type="text" id="name" required>
          </div>
          <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" required>
          </div>
          <div class="form-group">
            <label for="message">N·ªôi dung:</label>
            <textarea id="message" rows="5" required></textarea>
          </div>
          <button type="submit" class="btn-submit">G·ª≠i y√™u c·∫ßu</button>
        </form>
      </div>
    `
  };

  menuLinks.forEach(link => {
    link.addEventListener("click", function (e) {
      e.preventDefault();
      const selected = this.textContent.trim();
      if (pages[selected]) {
        content.innerHTML = pages[selected];
        
        // Kh·ªüi t·∫°o bi·ªÉu ƒë·ªì n·∫øu c√≥
        if (selected === "Gi√°m s√°t hi·ªáu su·∫•t") {
          setTimeout(() => {
            const ctx = document.getElementById("performanceChart").getContext("2d");
            new Chart(ctx, {
              type: "line",
              data: {
                labels: ["00:00", "04:00", "08:00", "12:00", "16:00", "20:00"],
                datasets: [
                  {
                    label: "CPU trung b√¨nh (%)",
                    data: [25, 30, 45, 50, 40, 35],
                    borderColor: "#0074D9",
                    fill: false
                  },
                  {
                    label: "RAM trung b√¨nh (%)",
                    data: [50, 55, 60, 65, 58, 52],
                    borderColor: "#FF4136",
                    fill: false
                  },
                  {
                    label: "BƒÉng th√¥ng (%)",
                    data: [30, 40, 60, 70, 50, 45],
                    borderColor: "#2ECC40",
                    fill: false
                  }
                ]
              },
              options: {
                responsive: true,
                plugins: {
                  legend: {
                    position: 'top'
                  },
                  title: {
                    display: true,
                    text: 'Hi·ªáu su·∫•t h·ªá th·ªëng 24 gi·ªù qua'
                  }
                }
              }
            });
          }, 100);
        }
      } else {
        content.innerHTML = "<div class='card'><p>N·ªôi dung ƒëang ƒë∆∞·ª£c c·∫≠p nh·∫≠t...</p></div>";
      }
    });
  });

  // Load trang ch·ªß m·∫∑c ƒë·ªãnh
  content.innerHTML = pages["Trang ch·ªß"];

  window.loadFloorData = function (floor) {
    content.innerHTML = `
      <h2>Th√¥ng tin t·∫ßng ${floor}</h2>
      <div class="card">
        <h3>Thi·∫øt b·ªã m·∫°ng</h3>
        <ul>
          <li>Switch t·∫ßng ${floor} - Ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh</li>
          <li>Router t·∫ßng ${floor} - B√¨nh th∆∞·ªùng</li>
          <li>Access Point t·∫ßng ${floor} - ƒêang k·∫øt n·ªëi</li>
        </ul>
      </div>
      <div class="card">
        <h3>Hi·ªáu su·∫•t thi·∫øt b·ªã</h3>
        <canvas id="performanceChart" width="600" height="300"></canvas>
      </div>
      <div class="card">
        <h3>B√°o c√°o l·ªói</h3>
        <ul>
          <li>[10:10] Switch t·∫ßng ${floor} - Ping delay cao</li>
          <li>[09:45] Router t·∫ßng ${floor} - TƒÉng t·∫£i CPU</li>
        </ul>
      </div>
    `;

    setTimeout(() => {
      const ctx = document.getElementById("performanceChart").getContext("2d");
      new Chart(ctx, {
        type: "line",
        data: {
          labels: ["0s", "5s", "10s", "15s", "20s"],
          datasets: [
            {
              label: "CPU (%)",
              data: [Math.random() * 30 + 20, 40, 45, 35, 50],
              borderColor: "#0074D9",
              fill: false
            },
            {
              label: "RAM (%)",
              data: [50, 60, 55, 58, 62],
              borderColor: "#FF4136",
              fill: false
            }
          ]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'top'
            },
            title: {
              display: true,
              text: 'Hi·ªáu su·∫•t t·∫ßng ' + floor
            }
          }
        }
      });
    }, 100);
  };
});
